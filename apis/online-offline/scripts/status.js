/*API
navigator.onLine
navigator.onLine √© uma propriedade que mant√©m um valor 
verdadeiro / falso (verdadeiro para online, falso para offline).*/


//fun√ß√£o boolean que manipula o DOM dinamicamente para ajustar ao status de conex√£o
function hasNetwork(online) {
  const element = document.querySelector(".status");
  if(online) {
    element.classList.remove("offline");
    element.classList.add("online");
    element.innerText = "üì≥ Online :)";
  } else {
    element.classList.remove("online");
    element.classList.add("offline");
    element.innerText = "üì¥ Offline :(";
  }
}

//verifica inicialmente se o estado do usu√°rio √© 'online'

/* pode ser √≥tima se eles inicializarem seu aplicativo e 
puderem ser informados de que seu conte√∫do pode estar desatualizado.*/

window.addEventListener("load", () => {
  hasNetwork(navigator.onLine);
});

window.addEventListener("load", () => {
  hasNetwork(navigator.onLine);

  window.addEventListener("online", () => {
    hasNetwork(true);
  });
  window.addEventListener("offline", () => {
    hasNetwork(false);
  });
});

/*Ent√£o, quando usar isso?
Talvez voc√™ precise dizer a um usu√°rio que ele n√£o
pode carregar um arquivo porque est√° offline, os dados ao 
vivo que est√£o vendo podem n√£o estar mais atualizados porque 
est√£o offline ou algo assim.*/